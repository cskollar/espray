substitutions:
  rel1_gpio: GPIO1
  rel2_gpio: GPIO2
  rel3_gpio: GPIO41
  rel4_gpio: GPIO42
  rel5_gpio: GPIO45
  rel6_gpio: GPIO46
  bootkey_gpio: GPIO0
  buzzer_gpio: GPIO21
  led_gpio: GPIO38
  rx_gpio: GPIO17
  tx_gpio: GPIO18

esphome:
  name: espray-6ch
  friendly_name: espray-6ch
  platformio_options:
    board_build.flash_mode: dio

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    advanced:
      ignore_efuse_mac_crc: false
  flash_size: 8MB

uart:
  rx_pin: $rx_gpio
  tx_pin: $tx_gpio
  baud_rate: 9600

api:
  password: !apisecret

wifi:
  ssid: myssid
  password: !wifisecret

ota:
  safe_mode: true
  port: 3232
  password: !otasecret

logger:
  level: VERBOSE
  # Disable UART logging (pins GPIO1/3 are used for communication with the display)
  baud_rate: 0

web_server:
  port: 80

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Budapest
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org

display:
  - platform: nextion
    id: nextion_display
    update_interval: 5s
    lambda: |-
      // Relay states
      char buffer[4];
      for (int i = 0; i < 6; i++) {
        sprintf(buffer, "bt%d", i);
        bool state;
        if (i == 0) state = id(relay1).state;
        else if (i == 1) state = id(relay2).state;
        else if (i == 2) state = id(relay3).state;
        else if (i == 3) state = id(relay4).state;
        else if (i == 4) state = id(relay5).state;
        else if (i == 5) state = id(relay6).state;
        if (state) {
          it.set_component_value(buffer, 1);
        } else {
          it.set_component_value(buffer, 0);
        }
      }
      // Set date&time
      if (id(sntp_time).now().is_valid()) {
        it.set_component_text("time0", id(sntp_time).now().strftime("%H:%M").c_str());
      } else {
        it.set_component_text("time0","NO NTP");
      }
      if (id(sntp_time).now().is_valid()) {
        it.set_component_text("date0", id(sntp_time).now().strftime("%Y-%m-%d").c_str());
      } else {
        it.set_component_text("date0","NO NETWORK");
      }
      // Progress bar&status
      static std::string initial_value_str;
      static bool progress_bar_visible = true;
      if (id(controller).time_remaining_active_valve().has_value()) {
        std::string value_str = std::to_string(id(controller).time_remaining_active_valve().value());
        static std::string initial_value_str;
        if (initial_value_str.empty() || !progress_bar_visible) {
          initial_value_str = value_str;
          it.show_component("j0");
          it.show_component("state0");
          progress_bar_visible = true;
        }
        float initial_value = std::stof(initial_value_str);
        float current_value = std::stof(value_str);
        int percent_value = static_cast<int>((current_value / initial_value) * 100);
        it.set_component_value("j0", percent_value);
      } else {
        if (progress_bar_visible) {
          it.hide_component("j0");
          it.hide_component("state0");
          progress_bar_visible = false;
          initial_value_str.clear();
        }
      }
    // DEBUG
    on_touch:
      then:
        lambda: |-
          ESP_LOGD("nextion.on_touch", "Nextion touch event detected!");
          ESP_LOGD("nextion.on_touch", "Page Id: %i", page_id);
          ESP_LOGD("nextion.on_touch", "Component Id: %i", component_id);
          ESP_LOGD("nextion.on_touch", "Event type: %s", touch_event ? "Press" : "Release");

light:
  - platform: esp32_rmt_led_strip
    id: esp32_rgb_led
    name: "Status LED"
    rgb_order: GRB
    pin: GPIO38
    num_leds: 1
    rmt_channel: 0
    chipset: ws2812
    restore_mode: ALWAYS_OFF
    internal: true

switch:
  - platform: gpio
    id: relay1
    pin: $rel1_gpio
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay2
    pin: $rel2_gpio
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay3
    pin: $rel3_gpio
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay4
    pin: $rel4_gpio
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay5
    pin: $rel5_gpio
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay6
    pin: $rel6_gpio
    restore_mode: RESTORE_DEFAULT_OFF

interval:
  - interval: 10s
    then:
      if:
        condition:
          wifi.connected:
        then:
          - light.turn_on:
              id: esp32_rgb_led
              brightness: 50%
              red: 0%
              green: 0%
              blue: 100%
        else:
          - light.turn_off:
              id: esp32_rgb_led

sprinkler:
  - id: controller
    main_switch: "Irrigation"
    auto_advance_switch: "Auto Advance"
    valve_open_delay: 10s
    valves:
      - valve_switch: "Zone 1"
        enable_switch: "Enable Zone 1"
        valve_switch_id: relay1
        run_duration_number:
          id: valve_1_duration
          name: "Zone 1 duration"
          min_value: 1
          max_value: 900
          step: 1
          initial_value: 15
          mode: slider
          icon: mdi:timer-outline
          entity_category: config
          disabled_by_default: false
      - valve_switch: "Zone 2"
        enable_switch: "Enable Zone 2"
        valve_switch_id: relay2
        run_duration_number:
          id: valve_2_duration
          name: "Zone 2 duration"
          min_value: 1
          max_value: 900
          step: 1
          initial_value: 15
          mode: slider
          icon: mdi:timer-outline
          entity_category: config
          disabled_by_default: false
      - valve_switch: "Zone 3"
        enable_switch: "Enable Zone 3"
        valve_switch_id: relay3
        run_duration_number:
          id: valve_3_duration
          name: "Zone 3 duration"
          min_value: 1
          max_value: 900
          step: 1
          initial_value: 15
          mode: slider
          icon: mdi:timer-outline
          entity_category: config
          disabled_by_default: false
      - valve_switch: "Zone 4"
        enable_switch: "Enable Zone 4"
        valve_switch_id: relay4
        run_duration_number:
          id: valve_4_duration
          name: "Zone 4 duration"
          min_value: 1
          max_value: 900
          step: 1
          initial_value: 15
          mode: slider
          icon: mdi:timer-outline
          entity_category: config
          disabled_by_default: false
      - valve_switch: "Zone 5"
        enable_switch: "Enable Zone 5"
        valve_switch_id: relay5
        run_duration_number:
          id: valve_5_duration
          name: "Zone 5 duration"
          min_value: 1
          max_value: 900
          step: 1
          initial_value: 15
          mode: slider
          icon: mdi:timer-outline
          entity_category: config
          disabled_by_default: false
      - valve_switch: "Zone 6"
        enable_switch: "Enable Zone 6"
        valve_switch_id: relay6
        run_duration_number:
          id: valve_6_duration
          name: "Zone 6 duration"
          min_value: 1
          max_value: 900
          step: 1
          initial_value: 15
          mode: slider
          icon: mdi:timer-outline
          entity_category: config
          disabled_by_default: false
